package com.froy.magicalitem.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.froy.magicalitem.dao.Categories;
import com.froy.magicalitem.dao.MagicalItems;
import com.froy.magicalitem.dao.Spells;
import com.froy.magicalitem.dao.Feats;
import com.froy.magicalitem.dao.ItemSpells;
import com.froy.magicalitem.dao.ItemFeats;

import com.froy.magicalitem.dao.CategoriesDao;
import com.froy.magicalitem.dao.MagicalItemsDao;
import com.froy.magicalitem.dao.SpellsDao;
import com.froy.magicalitem.dao.FeatsDao;
import com.froy.magicalitem.dao.ItemSpellsDao;
import com.froy.magicalitem.dao.ItemFeatsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoriesDaoConfig;
    private final DaoConfig magicalItemsDaoConfig;
    private final DaoConfig spellsDaoConfig;
    private final DaoConfig featsDaoConfig;
    private final DaoConfig itemSpellsDaoConfig;
    private final DaoConfig itemFeatsDaoConfig;

    private final CategoriesDao categoriesDao;
    private final MagicalItemsDao magicalItemsDao;
    private final SpellsDao spellsDao;
    private final FeatsDao featsDao;
    private final ItemSpellsDao itemSpellsDao;
    private final ItemFeatsDao itemFeatsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoriesDaoConfig = daoConfigMap.get(CategoriesDao.class).clone();
        categoriesDaoConfig.initIdentityScope(type);

        magicalItemsDaoConfig = daoConfigMap.get(MagicalItemsDao.class).clone();
        magicalItemsDaoConfig.initIdentityScope(type);

        spellsDaoConfig = daoConfigMap.get(SpellsDao.class).clone();
        spellsDaoConfig.initIdentityScope(type);

        featsDaoConfig = daoConfigMap.get(FeatsDao.class).clone();
        featsDaoConfig.initIdentityScope(type);

        itemSpellsDaoConfig = daoConfigMap.get(ItemSpellsDao.class).clone();
        itemSpellsDaoConfig.initIdentityScope(type);

        itemFeatsDaoConfig = daoConfigMap.get(ItemFeatsDao.class).clone();
        itemFeatsDaoConfig.initIdentityScope(type);

        categoriesDao = new CategoriesDao(categoriesDaoConfig, this);
        magicalItemsDao = new MagicalItemsDao(magicalItemsDaoConfig, this);
        spellsDao = new SpellsDao(spellsDaoConfig, this);
        featsDao = new FeatsDao(featsDaoConfig, this);
        itemSpellsDao = new ItemSpellsDao(itemSpellsDaoConfig, this);
        itemFeatsDao = new ItemFeatsDao(itemFeatsDaoConfig, this);

        registerDao(Categories.class, categoriesDao);
        registerDao(MagicalItems.class, magicalItemsDao);
        registerDao(Spells.class, spellsDao);
        registerDao(Feats.class, featsDao);
        registerDao(ItemSpells.class, itemSpellsDao);
        registerDao(ItemFeats.class, itemFeatsDao);
    }
    
    public void clear() {
        categoriesDaoConfig.getIdentityScope().clear();
        magicalItemsDaoConfig.getIdentityScope().clear();
        spellsDaoConfig.getIdentityScope().clear();
        featsDaoConfig.getIdentityScope().clear();
        itemSpellsDaoConfig.getIdentityScope().clear();
        itemFeatsDaoConfig.getIdentityScope().clear();
    }

    public CategoriesDao getCategoriesDao() {
        return categoriesDao;
    }

    public MagicalItemsDao getMagicalItemsDao() {
        return magicalItemsDao;
    }

    public SpellsDao getSpellsDao() {
        return spellsDao;
    }

    public FeatsDao getFeatsDao() {
        return featsDao;
    }

    public ItemSpellsDao getItemSpellsDao() {
        return itemSpellsDao;
    }

    public ItemFeatsDao getItemFeatsDao() {
        return itemFeatsDao;
    }

}
